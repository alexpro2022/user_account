"""migration â„–1

Revision ID: f03e74ab54df
Revises:
Create Date: 2025-04-23 11:36:38.458170

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f03e74ab54df"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("admin", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)

    op.create_table(
        "account",
        sa.Column("number", sa.String(length=256), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_account_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_account")),
    )
    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_account_number"), ["number"], unique=True)

    op.create_table(
        "payment",
        sa.Column("number", sa.String(length=256), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"], ["account.id"], name=op.f("fk_payment_account_id_account")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_payment")),
    )
    with op.batch_alter_table("payment", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_payment_number"), ["number"], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("payment", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_payment_number"))

    op.drop_table("payment")
    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_account_number"))

    op.drop_table("account")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_email"))

    op.drop_table("user")
    # ### end Alembic commands ###
